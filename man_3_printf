% _PRINTF(3)
% Mateo Garcia - Sandra Calero
% July 2021

# NAME
_printf - formats and prints data
# SYNOPSIS
**#include "holberton.h"**

**int _printf(const char *format, ...)**

#DESCRIPTION
The **_printf** function prints to standard output according to a format as the selected conversion specifiers.

**Format of the format string**
: Format string that contains zero or more normal characters (different to '%' char) that are printed in the standard output; and\
		conversion specifiers which match zero or more following arguments in elipsis.
		The conversion specifier is next to the percentage symbol (%) and ends with a *conversion specifier*.

The overall syntax of the conversion specification is:
: %conversion_specifier

:_printf(%d, num);

The arguments given must correspond properly with the conversion specifiers. The arguments passed are used in the given order. It is an\
	    error to pass incongruent or insuficient arguments than the conversion specifiers used in format string.


## Conversion specifiers
**c**
: Argument of type *int* is converted to an unsigned char, and the resulting char is written.

**d, i**
: Argument of type *int* is converted to a notion of a signed decimal.

**s**
: Argument of type *const char \** pointer to character array. Characters from the array are\
		written up to (but not including) a terminating null byte ('\0'); 

**%**
: Prints a percentage symbol (%). The complete conversion specification is '%%'.

#RETURN VALUE
: For success _printf function returns the number of characters sent to the standard output (not counting the null byte to end a string).
: If format is NULL, or the null byte is the next character to the conversion specifier (%); return integer (-1).
#BUGS
#EXAMPLES


#AUTHORS
: Mateo Garcia
: Sandra Calero
#COPYRIGHT
