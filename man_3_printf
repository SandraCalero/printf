.\" Automatically generated by Pandoc 1.19.2.4
.\"
.TH "_PRINTF" "3" "July 2021" "" ""
.hy
.SH NAME
.PP
_printf \- formats and prints data
.SH SYNOPSIS
.PP
\f[B]#include "holberton.h"\f[]
.PP
int _printf(const char *format, ...)
.SH DESCRIPTION
.PP
The \f[B]_printf\f[] function prints to standard output according to a
format as the selected conversion specifiers.
.SS Format of the format string
.PP
Format string that contains zero or more normal characters (different to
\[aq]%\[aq] char) that are printed in the standard output; and
conversion specifiers which match zero or more following arguments in
elipsis.
The conversion specifier is next to the percentage symbol (%) and ends
with a \f[I]conversion specifier\f[].
.PP
The overall syntax of the conversion specification is:
.IP
.nf
\f[C]
%conversion_specifier
_printf("%d",\ num);
\f[]
.fi
.PP
The arguments given must correspond properly with the conversion
specifiers.
The arguments passed are used in the given order.
It is an error to pass incongruent or insuficient arguments than the
conversion specifiers used in format string.
.SS Conversion specifiers
.TP
.B \f[B]c\f[]
Argument of type \f[I]int\f[] is converted to an unsigned char, and the
resulting char is written.
.RS
.RE
.TP
.B \f[B]d, i\f[]
Argument of type \f[I]int\f[] is converted to a notion of a signed
decimal.
.RS
.RE
.TP
.B \f[B]s\f[]
Argument of type \f[I]const char *\f[] pointer to character array.
Characters from the array are written up to (but not including) a
terminating null byte (\[aq]\[aq]);
.RS
.RE
.TP
.B \f[B]%\f[]
Prints a percentage symbol (%).
The complete conversion specification is \[aq]%%\[aq].
.RS
.RE
.SH RETURN VALUE
.PP
For success _printf function returns the number of characters sent to
the standard output (not counting the null byte to end a string).
.PP
If format is NULL, or the null byte is the next character to the
conversion specifier (%); return integer (\-1).
.SH BUGS
.PP
This program does not have bugs.
.SH EXAMPLES
.PP
The header holberton.h must be used for all the examples:
.IP
.nf
\f[C]
#include\ "holberton.h"

To\ print\ a\ simple\ string\ "Betty\ Holberton":
\ \ \ \ _printf("Betty\ Holberton");

Using\ convertion\ specifier\ *%c*
\ \ \ \ _printf("This\ is\ a\ character:\ %c\\n",\ \[aq]H\[aq]);

Using\ convertion\ specifier\ *%s*
\ \ \ \ _printf("This\ is\ a\ string:\ %s\\n",\ "Hello,\ World!");

Using\ convertion\ specifier\ *%d*
\ \ \ \ _printf("This\ is\ a\ number\ %d\\n",\ 99);

Using\ convertion\ specifier\ *%i*
\ \ \ \ _printf("This\ is\ a\ number\ %i\\n",\ 98);

Using\ convertion\ specifier\ *%%*
\ \ \ \ _printf("This\ is\ a\ percentage\ symbol:\ %%\\n");
\f[]
.fi
.SH COPYRIGHT
.PP
Copyright Â© [2021] [Mateo Garcia \- Sandra Calero]
.SH AUTHORS
Mateo Garcia \- Sandra Calero.
